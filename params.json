{"name":"Mathkeyboard","tagline":"A program for typing unicode math symbols using key combinations.","body":"---\r\nLatest Version: **0.5.3**   [Download](https://github.com/GregRos/MathKeyboard/releases/latest)\r\n\r\n---\r\nA program for easily typing math characters, without interfering with normal typing and other keyboard use, implemented using AutoHotKey (AHK), released into the public domain. \r\n\r\nIt features multiple simple layouts, activated by key combinations, each layout having a certain theme, and in each layout the same key can be mapped to a different character. You can this program in Word, email, chat, and LaTeX (though that last one requires a bit of configuration), and anywhere in general that supports a decent range of unicode characters.\r\n\r\nThe exception is the mathematical fonts feature, which is incompatible with some applications, though it still works in many.\r\n\t\r\nExamples of the symbols you can type are: \r\n* The entire greek alphabet: α, β, γ, ...\r\n* Various operators, such as ∫, ∬, ≡, ≈, ≃, ...\r\n* Arrows and similar symbols, e.g. → ← ⇒ ⇐\r\n* Subscripts and superscripts, such as a₁, a₂, b¹, b³, aⁱ, aⁿ (all numbers, but only some letters are available)\r\n* Some combining diacritics, such as a̱, b̳, č, d̆, ẹ, f̤\r\n* Some wider, such as ] [ `em space`, ] [ `en space` (not distinguishable in all fonts, but the `em` space is twice as large).\r\n* Mathematical font characters, such as the ones visible here http://mathb.in/34748. Note that many applications are incompatible with them. See the font section for more information.\r\n\r\nYou can find a mostly full overview of the mappings [here](https://docs.google.com/spreadsheets/d/1XwY12T9WvS9ac-Eynnej0O1s2RGy9Ej8OaQdczs3FFI), a Google Sheets table that  which describes which keys are mapped to which. The content of that file is also public domain.\r\n\r\n## Requirements\r\nRequires Windows, sadly. It was tested on Windows 8.1, but should work on any version Vista and up.\r\n\r\nYou don't need to install/have anything installed on your computer. \r\n\r\nHowever, you try to make sure you have a font that can render these characters. While many fonts can render most characters such as operators, greek characters, combining diacritics, and so forth, the mathematical font characters require a math font like Cambria Math (proprietary font that comes with Office), [STIX Math](http://sourceforge.net/projects/stixfonts/), [XITS Math](https://github.com/khaledhosny/xits-math), or similar.\r\n\r\n## How to Run\r\nJust click on the executable file to run the program. The program should appear as a tray icon. A context menu provides various options, including help (which links to this page), and key mappings (which links to the google sheet).\r\n\r\nThe script is pretty uninstrusive, though you probably shouldn't play video games with it running. If you want to have it start automatically with Windows, you need to put a shortcut to the executable to the following folder:\r\n\r\n\tC:\\Users\\[***YOUR USER FOLDER***]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\r\n\r\n## Guide\r\nThe keyboard doesn't just replace your keys with other symbols. That would be very difficult to use. Instead, it uses the sequence \\`\\` (two back-ticks), which is called the active sequence. In order to remind you you're using the keyboard, it replaces those symbols with `ℳ:`. The next key you type will be interpreted as a command to the keyboard, which can either enable a specific layout or change the last key you typed into a different, related form.\r\n\r\nThe keys you type are chosen sometimes because they are related to the command, but mainly because they are all on the left side of the keyboard, which means the combination \\`\\`[Key] can be typed quickly with one hand.\r\n\r\nIn order to get \\`\\`, you need to escape the `ℳ:` symbols by typing an additional \\` (back-tick).\r\n\r\nThe following is a list of possible commands. Most of it also appears as a tooltip when you use the keyboard.\r\n\r\n\tLayouts\r\n\t--------\r\n\tr   General layout, includes calculus, operators, ...\r\n\ts   Logic and set theory layout\r\n\td   Misc operators/symbols layout\r\n\te   Greek layout\r\n\t2   Subscript layout\r\n\t3   Superscript layout\r\n\t4   Lower combining diacritic layout (a̱)\r\n\t5   Upper combining diacritic layout (ā)\r\n\t\r\n\tModifiers\r\n\t--------\r\n\tx\tNegates the previous symbol, such as turning = into ≠\r\n\tw\tChanges the previous symbol to a related larger or more complex symbol.\r\n\tf\tAdds a mathematical font to the previous character \r\n\t\t (incompatbile with many applications; read more about this below)\r\n\t\r\n\tLiterals\r\n\t--------\r\n\t`\t\tOutputs a literal pair of backticks, ``\r\n\t!\t\tOutputs the string ℳ:\r\n\t[Tab]\tOuputs the tab identation character.*\r\n\t\r\n\t*\tUseful if you're typing in a web browser, in which \r\n\t\t the tab keyboard key already means something else.\r\n\r\n### Layouts\r\nHaving chosen a layout, the next single key you type will be modified according to that layout. These key mappings are mnemonic, with respect to one of the labels on the key. For example, the common sets ℝ, ℕ, ℤ are typed in the set-theory layout using `r`, `n`, and `z`. The relations `≤, ≪, ≥, ≫` are typed using the keys `, < . >` because related relations appear as labels on those keys.\r\n\r\nIn addition, as in the case `',' → '≤' '<' → '≪'`, using the shift or upper case version of a certain key maps to a related symbol which is larger, more advanced, or more obscure than the normal symbol. \r\n\r\n### Modifiers\r\nTyping one of the following keys after \\`\\` modifies the previous key, replacing it with a related form. The following modifiers are currently available:\r\n\t\r\n\tx\tNegation\t Negates the previous character, turning = into ≠.\r\n\tw\tExtra\t\tSwitches to an advanced form of the previous charcter, such as turning ∫ into ∭ \r\n\t\t\t\t\t  (∬ is produced by typing ``r + capital S)\r\nNot all keys have these forms. For example, it doesn't make sense to negate the ∫ symbol, and only digits, and latin and greek letters support fonts. \r\n\r\nThe effect each modifier has on each key can be seen in the Google Sheets table linked above. Note that modifier keys create symbols that can be modified again, although the only combination that is currently used is `Extra+Negation`, such as `d+'>'→'⊳' `→ `'⊳'+w→'⊵'` → `'⊵'+x→'⋭` (the font used on GitHub confuses `⊲` with `⊳`).\r\n\r\n### Fonts\r\n---\r\n#### !!!! IMPORTANT !!!!\r\n\r\nThis feature is frequently incompatible with some applications. This is because applications aren't designed to handle these sorts of characters. Errors you could experience using this feature:\r\n\r\n1. Problem with rendering the characters, even if the font contains them.\r\n2. Backspace deletes \"half\" of a character, and consequently some features of the script don't function exactly as they should.\r\n3. Appear as asian characters.\r\n\r\nFurthermore, many people simply don't have to fonts to display these characters.\r\n\r\n##### Technical Stuff\r\nThis is because these characters have codepoints higher than U+FFFF, e.g. they require more than 2 bytes to be represented. Most software assumes at least some of the time that unicode characters are confined to UCS-2, a format in which every codepoint is represented by exactly 2 bytes. This is sufficient to represent most modern languages, but doesn't cover the whole of unicode, which is truly immense.\r\n\r\n---\r\n\r\nThis is another modifier command, but it is a bit more complex and so deserves a section of its own. \r\n\r\nAfter hitting the font key, you can press one of the following keys to modify the previous symbol with one or more specific fonts:\r\n\r\n\tb\tBold\r\n\ti\tItalic\r\n\ts\tScript\r\n\td\tDouble-struck\r\n\tf\tFraktur\r\n\ta\tSans-serif\r\n\tt\tTypewriter\r\n\t\r\nThe command allows you to input multiple characters at once, and a symbol can have several font combinations, such as bold+italic, bold+script, and so forth. However, the availability of font combinations depends on the availability of the appropriate character. Most of these characters come from the [Mathematical Alphanumeric Symbols](http://jrgraphix.net/r/Unicode/1D400-1D7FF) block, so characters with the appropriate font combination must be present there, or somewhere else in the Unicode character set. The available font combinations for each type of character are listed in the spreadsheet.\r\n\r\nFonts are only available for digits, latin letters, and greek letters, although the character block does include a few other letter-like symbols that have fonts. \r\n\r\nYou can modify a character with fonts iteratively, but you should be aware that for some characters, only combination fonts exist. For example, greek characters can be bold+sans serif+italic, but cannot be italic+sans serif.\r\n\r\n### Errors\r\nIf there is an error, a tooltip appears and informs you of it, along with the character that caused the error. Then your input is either erased or turned into its literal form.\r\n\r\n### Modifying the Keyboard\r\n\r\nMost of the user-editable stuff is located in `Bindings.ahk`. It's fairly simple to add your own key bindings to the existing layouts. You can just follow the structure of the file. \r\n\r\nTo add additional layouts some simple modifications of `MathKeyboard.ahk` are required.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}